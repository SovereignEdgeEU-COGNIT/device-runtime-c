/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_NANO_PB_H_INCLUDED
#define PB_NANO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Ejemplo: permitimos hasta 32 valores para cada repeated double. */
typedef struct _MyDouble {
    pb_size_t values_count;
    double values[128];
} MyDouble;

/* Ejemplo: permitimos hasta 32 valores para cada repeated float. */
typedef struct _MyFloat {
    pb_size_t values_count;
    float values[128];
} MyFloat;

/* Ejemplo: permitimos hasta 32 valores para cada repeated int32. */
typedef struct _MyInt32 {
    pb_size_t values_count;
    int32_t values[128];
} MyInt32;

/* Ejemplo: permitimos hasta 32 valores para cada repeated int64. */
typedef struct _MyInt64 {
    pb_size_t values_count;
    int64_t values[128];
} MyInt64;

/* Ejemplo: permitimos hasta 32 valores para cada repeated uint32. */
typedef struct _MyUint32 {
    pb_size_t values_count;
    uint32_t values[128];
} MyUint32;

/* Ejemplo: permitimos hasta 32 valores para cada repeated uint64. */
typedef struct _MyUint64 {
    pb_size_t values_count;
    uint64_t values[128];
} MyUint64;

/* Ejemplo: permitimos hasta 32 valores para cada repeated sint32. */
typedef struct _MySint32 {
    pb_size_t values_count;
    int32_t values[128];
} MySint32;

/* Ejemplo: permitimos hasta 32 valores para cada repeated sint64. */
typedef struct _MySint64 {
    pb_size_t values_count;
    int64_t values[128];
} MySint64;

/* Ejemplo: permitimos hasta 32 valores para cada repeated fixed32. */
typedef struct _MyFixed32 {
    pb_size_t values_count;
    uint32_t values[128];
} MyFixed32;

/* Ejemplo: permitimos hasta 32 valores para cada repeated fixed64. */
typedef struct _MyFixed64 {
    pb_size_t values_count;
    uint64_t values[128];
} MyFixed64;

/* Ejemplo: permitimos hasta 32 valores para cada repeated sfixed32. */
typedef struct _MySfixed32 {
    pb_size_t values_count;
    int32_t values[128];
} MySfixed32;

/* Ejemplo: permitimos hasta 32 valores para cada repeated sfixed64. */
typedef struct _MySfixed64 {
    pb_size_t values_count;
    int64_t values[128];
} MySfixed64;

/* Ejemplo: permitimos hasta 32 valores para cada repeated bool. */
typedef struct _MyBool {
    pb_size_t values_count;
    bool values[128];
} MyBool;

/* En el oneof, incluimos todos los tipos anteriores.
 Observa que 'string my_string' requiere un max_length. */
typedef struct _MyParam {
    pb_size_t which_param;
    union _MyParam_param {
        MyDouble my_double;
        MyFloat my_float;
        MyInt32 my_int32;
        MyInt64 my_int64;
        MyUint32 my_uint32;
        MyUint64 my_uint64;
        MySint32 my_sint32;
        MySint64 my_sint64;
        MyFixed32 my_fixed32;
        MyFixed64 my_fixed64;
        MySfixed32 my_sfixed32;
        MySfixed64 my_sfixed64;
        MyBool my_bool;
        char my_string[1025];
        pb_callback_t my_bytes;
    } param;
} MyParam;

typedef struct _FaasResponse {
    pb_size_t my_faas_response_count;
    MyParam my_faas_response[8];
} FaasResponse;

/* Mensaje que describe una "funci√≥n", 
 con campos string que necesitan un max_length si los vas a manejar con nanopb. */
typedef struct _MyFunc {
    char fc_code[16385];
} MyFunc;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define MyDouble_init_default                    {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyFloat_init_default                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyInt32_init_default                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyInt64_init_default                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyUint32_init_default                    {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyUint64_init_default                    {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySint32_init_default                    {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySint64_init_default                    {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyFixed32_init_default                   {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyFixed64_init_default                   {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySfixed32_init_default                  {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySfixed64_init_default                  {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyBool_init_default                      {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyParam_init_default                     {0, {MyDouble_init_default}}
#define FaasResponse_init_default                {0, {MyParam_init_default, MyParam_init_default, MyParam_init_default, MyParam_init_default, MyParam_init_default, MyParam_init_default, MyParam_init_default, MyParam_init_default}}
#define MyFunc_init_default                      {""}
#define MyDouble_init_zero                       {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyFloat_init_zero                        {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyInt32_init_zero                        {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyInt64_init_zero                        {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyUint32_init_zero                       {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyUint64_init_zero                       {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySint32_init_zero                       {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySint64_init_zero                       {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyFixed32_init_zero                      {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyFixed64_init_zero                      {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySfixed32_init_zero                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MySfixed64_init_zero                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyBool_init_zero                         {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MyParam_init_zero                        {0, {MyDouble_init_zero}}
#define FaasResponse_init_zero                   {0, {MyParam_init_zero, MyParam_init_zero, MyParam_init_zero, MyParam_init_zero, MyParam_init_zero, MyParam_init_zero, MyParam_init_zero, MyParam_init_zero}}
#define MyFunc_init_zero                         (MyFunc){""}

/* Field tags (for use in manual encoding/decoding) */
#define MyDouble_values_tag                      1
#define MyFloat_values_tag                       1
#define MyInt32_values_tag                       1
#define MyInt64_values_tag                       1
#define MyUint32_values_tag                      1
#define MyUint64_values_tag                      1
#define MySint32_values_tag                      1
#define MySint64_values_tag                      1
#define MyFixed32_values_tag                     1
#define MyFixed64_values_tag                     1
#define MySfixed32_values_tag                    1
#define MySfixed64_values_tag                    1
#define MyBool_values_tag                        1
#define MyParam_my_double_tag                    1
#define MyParam_my_float_tag                     2
#define MyParam_my_int32_tag                     3
#define MyParam_my_int64_tag                     4
#define MyParam_my_uint32_tag                    5
#define MyParam_my_uint64_tag                    6
#define MyParam_my_sint32_tag                    7
#define MyParam_my_sint64_tag                    8
#define MyParam_my_fixed32_tag                   9
#define MyParam_my_fixed64_tag                   10
#define MyParam_my_sfixed32_tag                  11
#define MyParam_my_sfixed64_tag                  12
#define MyParam_my_bool_tag                      13
#define MyParam_my_string_tag                    14
#define MyParam_my_bytes_tag                     15
#define FaasResponse_my_faas_response_tag        1
#define MyFunc_fc_code_tag                       1

/* Struct field encoding specification for nanopb */
#define MyDouble_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, DOUBLE,   values,            1)
#define MyDouble_CALLBACK NULL
#define MyDouble_DEFAULT NULL

#define MyFloat_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FLOAT,    values,            1)
#define MyFloat_CALLBACK NULL
#define MyFloat_DEFAULT NULL

#define MyInt32_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, INT32,    values,            1)
#define MyInt32_CALLBACK NULL
#define MyInt32_DEFAULT NULL

#define MyInt64_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, INT64,    values,            1)
#define MyInt64_CALLBACK NULL
#define MyInt64_DEFAULT NULL

#define MyUint32_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, UINT32,   values,            1)
#define MyUint32_CALLBACK NULL
#define MyUint32_DEFAULT NULL

#define MyUint64_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, UINT64,   values,            1)
#define MyUint64_CALLBACK NULL
#define MyUint64_DEFAULT NULL

#define MySint32_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, SINT32,   values,            1)
#define MySint32_CALLBACK NULL
#define MySint32_DEFAULT NULL

#define MySint64_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, SINT64,   values,            1)
#define MySint64_CALLBACK NULL
#define MySint64_DEFAULT NULL

#define MyFixed32_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FIXED32,  values,            1)
#define MyFixed32_CALLBACK NULL
#define MyFixed32_DEFAULT NULL

#define MyFixed64_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FIXED64,  values,            1)
#define MyFixed64_CALLBACK NULL
#define MyFixed64_DEFAULT NULL

#define MySfixed32_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, SFIXED32, values,            1)
#define MySfixed32_CALLBACK NULL
#define MySfixed32_DEFAULT NULL

#define MySfixed64_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, SFIXED64, values,            1)
#define MySfixed64_CALLBACK NULL
#define MySfixed64_DEFAULT NULL

#define MyBool_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, BOOL,     values,            1)
#define MyBool_CALLBACK NULL
#define MyBool_DEFAULT NULL

#define MyParam_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_double,param.my_double),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_float,param.my_float),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_int32,param.my_int32),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_int64,param.my_int64),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_uint32,param.my_uint32),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_uint64,param.my_uint64),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_sint32,param.my_sint32),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_sint64,param.my_sint64),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_fixed32,param.my_fixed32),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_fixed64,param.my_fixed64),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_sfixed32,param.my_sfixed32),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_sfixed64,param.my_sfixed64),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (param,my_bool,param.my_bool),  13) \
X(a, STATIC,   ONEOF,    STRING,   (param,my_string,param.my_string),  14) \
X(a, CALLBACK, ONEOF,    BYTES,    (param,my_bytes,param.my_bytes),  15)
#define MyParam_CALLBACK pb_default_field_callback
#define MyParam_DEFAULT NULL
#define MyParam_param_my_double_MSGTYPE MyDouble
#define MyParam_param_my_float_MSGTYPE MyFloat
#define MyParam_param_my_int32_MSGTYPE MyInt32
#define MyParam_param_my_int64_MSGTYPE MyInt64
#define MyParam_param_my_uint32_MSGTYPE MyUint32
#define MyParam_param_my_uint64_MSGTYPE MyUint64
#define MyParam_param_my_sint32_MSGTYPE MySint32
#define MyParam_param_my_sint64_MSGTYPE MySint64
#define MyParam_param_my_fixed32_MSGTYPE MyFixed32
#define MyParam_param_my_fixed64_MSGTYPE MyFixed64
#define MyParam_param_my_sfixed32_MSGTYPE MySfixed32
#define MyParam_param_my_sfixed64_MSGTYPE MySfixed64
#define MyParam_param_my_bool_MSGTYPE MyBool

#define FaasResponse_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  my_faas_response,   1)
#define FaasResponse_CALLBACK NULL
#define FaasResponse_DEFAULT NULL
#define FaasResponse_my_faas_response_MSGTYPE MyParam

#define MyFunc_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   fc_code,           1)
#define MyFunc_CALLBACK NULL
#define MyFunc_DEFAULT NULL

extern const pb_msgdesc_t MyDouble_msg;
extern const pb_msgdesc_t MyFloat_msg;
extern const pb_msgdesc_t MyInt32_msg;
extern const pb_msgdesc_t MyInt64_msg;
extern const pb_msgdesc_t MyUint32_msg;
extern const pb_msgdesc_t MyUint64_msg;
extern const pb_msgdesc_t MySint32_msg;
extern const pb_msgdesc_t MySint64_msg;
extern const pb_msgdesc_t MyFixed32_msg;
extern const pb_msgdesc_t MyFixed64_msg;
extern const pb_msgdesc_t MySfixed32_msg;
extern const pb_msgdesc_t MySfixed64_msg;
extern const pb_msgdesc_t MyBool_msg;
extern const pb_msgdesc_t MyParam_msg;
extern const pb_msgdesc_t FaasResponse_msg;
extern const pb_msgdesc_t MyFunc_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MyDouble_fields &MyDouble_msg
#define MyFloat_fields &MyFloat_msg
#define MyInt32_fields &MyInt32_msg
#define MyInt64_fields &MyInt64_msg
#define MyUint32_fields &MyUint32_msg
#define MyUint64_fields &MyUint64_msg
#define MySint32_fields &MySint32_msg
#define MySint64_fields &MySint64_msg
#define MyFixed32_fields &MyFixed32_msg
#define MyFixed64_fields &MyFixed64_msg
#define MySfixed32_fields &MySfixed32_msg
#define MySfixed64_fields &MySfixed64_msg
#define MyBool_fields &MyBool_msg
#define MyParam_fields &MyParam_msg
#define FaasResponse_fields &FaasResponse_msg
#define MyFunc_fields &MyFunc_msg

/* Maximum encoded size of messages (where known) */
/* MyParam_size depends on runtime parameters */
/* FaasResponse_size depends on runtime parameters */
#define MyBool_size                              256
#define MyDouble_size                            1152
#define MyFixed32_size                           640
#define MyFixed64_size                           1152
#define MyFloat_size                             640
#define MyFunc_size                              16388
#define MyInt32_size                             1408
#define MyInt64_size                             1408
#define MySfixed32_size                          640
#define MySfixed64_size                          1152
#define MySint32_size                            768
#define MySint64_size                            1408
#define MyUint32_size                            768
#define MyUint64_size                            1408
#define NANO_PB_H_MAX_SIZE                       MyFunc_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
